#            _               _____ _____  _____ _______ _________     __
#      /\   | |        /\   / ____|  __ \|_   _|__   __|__   __\ \   / /
#     /  \  | |       /  \ | |    | |__) | | |    | |     | |   \ \_/ /
#    / /\ \ | |      / /\ \| |    |  _  /  | |    | |     | |    \   /
#   / ____ \| |____ / ____ \ |____| | \ \ _| |_   | |     | |     | |
#  /_/    \_\______/_/    \_\_____|_|  \_\_____|  |_|     |_|     |_|

# Configuration for Alacritty, the GPU enhanced terminal emulator
# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization. Default is xterm-256color
  # Note: the default TERM value `xterm-256color` does not
  # specify all features alacritty supports. This does pose
  # a few issues with programs relying on terminfo and the
  # `tput` command
  TERM: xterm-256color
window:
  # Window dimensions in character columns and lines
  # (changes require restart)
  #  dimensions:
  #    columns: 117
  #    lines: 27
  # The FreeType rasterizer needs to know the device DPI for best results
  # (changes require restart)
  # s
  padding:
    x: 6
    y: 6

  title: Alacritty

  class:
    instance: Alacritty
    general: Alacritty

scrolling:
  history: 5000
# Display tabs using this many cells (changes require restart)
#tabspaces: 4
# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    #family: MesloLGS NF
    #family: SauceCodePro Nerd Font
    #family: mononoki Nerd Font
    family: JetBrains Mono Nerd Font
    #family: Source Code Pro
    # Style can be specified to pick a specific face.
    style: Regular

  # The bold font face
  bold:
    #family: MesloLGS NF
    #family: SauceCodePro Nerd Font
    #family:  mononoki Nerd Font
    family: JetBrains Mono Medium Nerd Font
    #family: Source Code Pro
    # Style can be specified to pick a specific face.
    style: Bold

  # The italic font face
  italic:
    #family: MesloLGS NF
    #family: SauceCodePro Nerd Font
    #family:  mononoki Nerd Font
    family: JetBrains Mono Medium Nerd Font
    #family: Source Code Pro
    # Style can be specified to pick a specific face.
    style: Italic

    # Point size of the font
    size: 11
  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 2

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: false

# Should display the render timer
# render_timer: true
# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: true

#My fav color scheme
#
# Colors (Night Owl by Sarah Drasner)
#
#colors:
#  # Default colors
#  primary:
#    background: '#011627'
#    foreground: '#acb4c2'
#
#  cursor:
#    text: '#fafafa'
#    cursor: '#9ca1aa'
#
#  selection:
#    text: '#080808'
#    background: '#b2ceee'
#
#  # Normal colors
#  normal:
#    black: '#1d3b53'
#    red: '#fc514e'
#    green: '#a1cd5e'
#    yellow: '#e3d18a'
#    blue: '#82aaff'
#    magenta: '#c792ea'
#    cyan: '#7fdbca'
#    white: '#a1aab8'
#
#  # Bright colors
#  bright:
#    black: '#7c8f8f'
#    red: '#ff5874'
#    green: '#21c7a8'
#    yellow: '#ecc48d'
#    blue: '#82aaff'
#    magenta: '#ae81ff'
#    cyan: '#7fdbca'
#    white: '#d6deeb'
#
# -- Dracula Color Scheme
colors:
  primary:
    background: "0x282a36"
    foreground: "0xf8f8f2"
  cursor:
    text: CellBackground
    cursor: CellForeground
  vi_mode_cursor:
    text: CellBackground
    cursor: CellForeground
  search:
    matches:
      foreground: "0x44475a"
      background: "0x50fa7b"
    focused_match:
      foreground: "0x44475a"
      background: "0xffb86c"
    bar:
      background: "0x282a36"
      foreground: "0xf8f8f2"
  line_indicator:
    foreground: None
    background: None
  selection:
    text: CellForeground
    background: "0x44475a"
  normal:
    black: "0x000000"
    red: "0xff5555"
    green: "0x50fa7b"
    yellow: "0xf1fa8c"
    blue: "0xbd93f9"
    magenta: "0xff79c6"
    cyan: "0x8be9fd"
    white: "0xbfbfbf"
  bright:
    black: "0x4d4d4d"
    red: "0xff6e67"
    green: "0x5af78e"
    yellow: "0xf4f99d"
    blue: "0xcaa9fa"
    magenta: "0xff92d0"
    cyan: "0x9aedfe"
    white: "0xe6e6e6"
  dim:
    black: "0x14151b"
    red: "0xff2222"
    green: "0x1ef956"
    yellow: "0xebf85b"
    blue: "0x4d5b86"
    magenta: "0xff46b0"
    cyan: "0x59dffc"
    white: "0xe6e6d1"

# Colors (Gruvbox dark)
#colors:
#  primary:
#    # hard contrast background - '#1d2021'
#    background:        &gruvbox_dark_bg '#282828'
#    # soft contrast background - '#32302f'
#    foreground:        '#fbf1c7'
#    bright_foreground: '#f9f5d7'
#    dim_foreground:    '#f2e5bc'
#  cursor:
#    text:   CellBackground
#    cursor: CellForeground
#  vi_mode_cursor:
#    text:   CellBackground
#    cursor: CellForeground
#  # search:
#  #   matches:
#  #     foreground: '#000000'
#  #     background: '#ffffff'
#  #   focused_match:
#  #    foreground: CellBackground
#  #    background: CellForeground
#  #   bar:
#  #     background: ''
#  #     foreground: ''
#  # line_indicator:
#  #   foreground: None
#  #   background: None
#  selection:
#    text:       CellBackground
#    background: CellForeground
#  bright:
#    black:   '#928374'
#    red:     '#fb4934'
#    green:   '#b8bb26'
#    yellow:  '#fabd2f'
#    blue:    '#83a598'
#    magenta: '#d3869b'
#    cyan:    '#8ec07c'
#    white:   '#ebdbb2'
#  normal:
#    black:   *gruvbox_dark_bg
#    red:     '#cc241d'
#    green:   '#98971a'
#    yellow:  '#d79921'
#    blue:    '#458588'
#    magenta: '#b16286'
#    cyan:    '#689d6a'
#    white:   '#a89984'
#  dim:
#    black:   '#32302f'
#    red:     '#9d0006'
#    green:   '#79740e'
#    yellow:  '#b57614'
#    blue:    '#076678'
#    magenta: '#8f3f71'
#    cyan:    '#427b58'
#    white:   '#928374'

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: EaseOutExpo
  duration: 0

background_opacity: 1.0
# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action` or `chars` field must be present. `chars` writes the
# specified string every time that binding is activated. These should generally
# be escape sequences, but they can be configured to send arbitrary strings of
# bytes. Possible values of `action` include `Paste` and `PasteSelection`.
key_bindings:
  - { key: Return, mods: Control|Shift, action: SpawnNewInstance }
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Q, mods: Control|Shift, action: Quit }
  - { key: W, mods: Control|Shift, action: Quit }
  - { key: Home, chars: "\eOH", mode: AppCursor }
  - { key: Home, chars: "\e[1~", mode: ~AppCursor }
  - { key: End, chars: "\eOF", mode: AppCursor }
  - { key: End, chars: "\e[4~", mode: ~AppCursor }
  - { key: PageUp, chars: "\e[5~" }
  - { key: PageDown, chars: "\e[6~" }
  - { key: Left, mods: Shift, chars: "\e[1;2D" }
  - { key: Left, mods: Control, chars: "\e[1;5D" }
  - { key: Left, mods: Alt, chars: "\e[1;3D" }
  - { key: Left, chars: "\e[D", mode: ~AppCursor }
  - { key: Left, chars: "\eOD", mode: AppCursor }
  - { key: Right, mods: Shift, chars: "\e[1;2C" }
  - { key: Right, mods: Control, chars: "\e[1;5C" }
  - { key: Right, mods: Alt, chars: "\e[1;3C" }
  - { key: Right, chars: "\e[C", mode: ~AppCursor }
  - { key: Right, chars: "\eOC", mode: AppCursor }
  - { key: Up, mods: Shift, chars: "\e[1;2A" }
  - { key: Up, mods: Control, chars: "\e[1;5A" }
  - { key: Up, mods: Alt, chars: "\e[1;3A" }
  - { key: Up, chars: "\e[A", mode: ~AppCursor }
  - { key: Up, chars: "\eOA", mode: AppCursor }
  - { key: Down, mods: Shift, chars: "\e[1;2B" }
  - { key: Down, mods: Control, chars: "\e[1;5B" }
  - { key: Down, mods: Alt, chars: "\e[1;3B" }
  - { key: Down, chars: "\e[B", mode: ~AppCursor }
  - { key: Down, chars: "\eOB", mode: AppCursor }
  - { key: Tab, mods: Shift, chars: "\e[Z" }
  - { key: F1, chars: "\eOP" }
  - { key: F2, chars: "\eOQ" }
  - { key: F3, chars: "\eOR" }
  - { key: F4, chars: "\eOS" }
  - { key: F5, chars: "\e[15~" }
  - { key: F6, chars: "\e[17~" }
  - { key: F7, chars: "\e[18~" }
  - { key: F8, chars: "\e[19~" }
  - { key: F9, chars: "\e[20~" }
  - { key: F10, chars: "\e[21~" }
  - { key: F11, chars: "\e[23~" }
  - { key: F12, chars: "\e[24~" }
  - { key: Back, chars: "" }
  - { key: Back, mods: Alt, chars: "\e" }
  - { key: Insert, chars: "\e[2~" }
  - { key: Delete, chars: "\e[3~", mode: AppKeypad }
  - { key: Delete, chars: "\e[P", mode: ~AppKeypad }

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

hide_cursor_when_typing: false
